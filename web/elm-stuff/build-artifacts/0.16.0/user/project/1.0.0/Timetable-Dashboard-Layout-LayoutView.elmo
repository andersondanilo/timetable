Elm.Timetable = Elm.Timetable || {};
Elm.Timetable.Dashboard = Elm.Timetable.Dashboard || {};
Elm.Timetable.Dashboard.Layout = Elm.Timetable.Dashboard.Layout || {};
Elm.Timetable.Dashboard.Layout.LayoutView = Elm.Timetable.Dashboard.Layout.LayoutView || {};
Elm.Timetable.Dashboard.Layout.LayoutView.make = function (_elm) {
   "use strict";
   _elm.Timetable = _elm.Timetable || {};
   _elm.Timetable.Dashboard = _elm.Timetable.Dashboard || {};
   _elm.Timetable.Dashboard.Layout = _elm.Timetable.Dashboard.Layout || {};
   _elm.Timetable.Dashboard.Layout.LayoutView = _elm.Timetable.Dashboard.Layout.LayoutView || {};
   if (_elm.Timetable.Dashboard.Layout.LayoutView.values) return _elm.Timetable.Dashboard.Layout.LayoutView.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Timetable$Common$Layout = Elm.Timetable.Common.Layout.make(_elm),
   $Timetable$Common$ViewHelpers = Elm.Timetable.Common.ViewHelpers.make(_elm),
   $Timetable$Dashboard$Dashboard$View = Elm.Timetable.Dashboard.Dashboard.View.make(_elm),
   $Timetable$Dashboard$Types = Elm.Timetable.Dashboard.Types.make(_elm);
   var _op = {};
   var header = F2(function (address,model) {
      return A2($Html.div,
      _U.list([$Html$Attributes.$class("navbar navbar-default navbar-fixed-top")]),
      _U.list([A2($Html.div,
      _U.list([$Html$Attributes.$class("container")]),
      _U.list([A2($Html.div,
              _U.list([$Html$Attributes.$class("navbar-header")]),
              _U.list([A2($Html.button,
                      _U.list([$Html$Attributes.$class("navbar-toggle")]),
                      _U.list([A2($Html.span,_U.list([$Html$Attributes.$class("sr-only")]),_U.list([$Html.text("Toggle navigation")]))
                              ,A2($Html.span,_U.list([$Html$Attributes.$class("icon-bar")]),_U.list([]))
                              ,A2($Html.span,_U.list([$Html$Attributes.$class("icon-bar")]),_U.list([]))
                              ,A2($Html.span,_U.list([$Html$Attributes.$class("icon-bar")]),_U.list([]))]))
                      ,A2($Html.a,
                      _U.list([$Html$Attributes.$class("navbar-brand"),A2($Html$Events.onClick,address,$Timetable$Dashboard$Types.NavigateTo(""))]),
                      _U.list([$Html.text("TIMETABLE")]))]))
              ,A2($Html.div,
              _U.list([$Html$Attributes.$class("navbar-collapse collapse navbar-right")]),
              _U.list([A2($Html.ul,_U.list([$Html$Attributes.$class("nav navbar-nav")]),_U.list([A2($Html.li,_U.list([]),_U.list([]))]))]))]))]));
   });
   var renderCurrentPage = F2(function (address,model) {
      var _p0 = model.route;
      if (_p0.ctor === "HomeRoute") {
            return A2($Timetable$Dashboard$Dashboard$View.renderDashboard,address,model);
         } else {
            return A2($Html.div,
            _U.list([]),
            _U.list([$Timetable$Common$ViewHelpers.renderTitle("Página não encontrada")
                    ,$Timetable$Common$ViewHelpers.renderContent(_U.list([$Html.text("A página que você procura não foi encontrada")]))]));
         }
   });
   var index = F2(function (address,model) {
      return A2($Html.div,_U.list([]),_U.list([A2(header,address,model),A2(renderCurrentPage,address,model),$Timetable$Common$Layout.footerwrap]));
   });
   var css = function (path) {    return A3($Html.node,"link",_U.list([$Html$Attributes.rel("stylesheet"),$Html$Attributes.href(path)]),_U.list([]));};
   return _elm.Timetable.Dashboard.Layout.LayoutView.values = {_op: _op,css: css,index: index,renderCurrentPage: renderCurrentPage,header: header};
};